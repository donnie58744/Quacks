<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>playerSpr</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Item Vars
globalvar pickAxe;
pickAxe = false;

// Player Vars
walkSpeed = 5;
colSpeed = walkSpeed + 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Movement
key_left = keyboard_check(ord("A"));
key_right = keyboard_check(ord("D"));
key_up = keyboard_check(ord("W"));
key_down = keyboard_check(ord("S"));
key_shift = keyboard_check_pressed(vk_lshift);
key_shift_relesed = keyboard_check_released(vk_lshift);
key_buyPick = keyboard_check_released(ord("P"));

if (key_left and place_free(x - colSpeed, y)) {
    x -= walkSpeed;
    sprite_index = playerSpr;
    image_xscale = -1;
}

if (key_right and place_free(x + colSpeed, y)) {
    x += walkSpeed;
    sprite_index = playerSpr;
    image_xscale = 1;
}

if (key_up and place_free(x, y - colSpeed)) {
    y -= walkSpeed;
    sprite_index = playerSpr;
}

if (key_down and place_free(x, y + colSpeed)) {
    y += walkSpeed;
    sprite_index = playerSpr;
}

if (key_shift) {
    walkSpeed += 2;
}

if (key_shift_relesed) {
    walkSpeed = 5;
}


// Buy Items
if (key_buyPick) {
    if (numRocks &gt;= 1 and numWood &gt;= 1 and !global.inventory[4]){
        global.numRocks-=1;
        global.numWood-=1;
        global.inventory[4] = 1;
        pickAxe = true;
    }
}

// Idle Check
if x == xprevious &amp;&amp; y == yprevious {
    sprite_index = idlePlayerSpr;
}

image_speed = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
